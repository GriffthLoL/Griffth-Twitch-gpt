const tmi = require('tmi.js');
const { Configuration, OpenAIApi } = require('openai');
require('dotenv').config(); // Carrega as variÃ¡veis de ambiente do arquivo .env

const openai = new OpenAIApi(new Configuration({
  apiKey: process.env.OPENAI_API_KEY
}));

const client = new tmi.Client({
  options: { debug: true },
  connection: {
    reconnect: true,
    secure: true
  },
  identity: {
    username: 'seu_usuario',
    password: process.env.TWITCH_AUTH_TOKEN
  },
  channels: ['seu_canal']
});

client.connect();

client.on('message', async (channel, user, message, self) => {
  if (message.startsWith('!gpt')) {
    const prompt = message.slice(4).trim();
    try {
      const response = await openai.createCompletion({
        model: 'text-davinci-003',
        prompt: prompt,
        max_tokens: 150
      });
      client.say(channel, response.data.choices[0].text.trim());
    } catch (error) {
      console.error(error);
      client.say(channel, 'Desculpe, algo deu errado com a API GPT.');
    }
  }
});
